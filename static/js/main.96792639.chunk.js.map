{"version":3,"sources":["Home.js","App.js","index.js"],"names":["Home","listening","recognition","window","SpeechRecognition","webkitSpeechRecognition","onstart","console","log","continuous","interimResults","addEventListener","event","word","document","querySelector","innerHTML","results","res","text","createTextNode","transcript","p","createElement","isFinal","classList","add","n","split","undefined","length","fetch","then","json","data","innerText","forEach","object","appendChild","className","onClick","stop","start","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"iKAqFeA,MAnFf,WAKI,IAAIC,GAAY,EAEVC,EAAc,IADMC,OAAOC,mBAAqBD,OAAOE,yBAyD7D,OAvDAH,EAAYI,QAAU,WAClBC,QAAQC,IAAI,wDAkDhBN,EAAYO,YAAa,EACzBP,EAAYQ,gBAAiB,EAC7BR,EAAYS,iBAAiB,UAvCZ,SAAAC,GAKb,IAAIC,EAJJC,SAASC,cAAc,eAAeC,UAAY,GAD5B,oBAOJJ,EAAMK,SAPF,IAOtB,2BAAiC,CAAC,IAAvBC,EAAsB,QACvBC,EAAOL,SAASM,eAAeF,EAAI,GAAGG,YACtCC,EAAIR,SAASS,cAAc,QAEjC,GAAIL,EAAIM,QAAS,CAEbF,EAAEG,UAAUC,IAAI,cAChB,IAAIC,EAAIT,EAAI,GAAGG,WAAWO,MAAM,KAChC,QAAaC,IAAThB,GAAsBA,IAASc,EAAEA,EAAEG,OAAS,GAC5C,MAEJjB,EAAOc,EAAEA,EAAEG,OAAS,GAEpBC,MAAM,uDAAD,OAAwDlB,EAAxD,2BACAmB,MAAK,SAACd,GAAD,OAASA,EAAIe,UAClBD,MAAK,SAACE,GAEHpB,SAASC,cAAc,WAAWoB,UAAY,GAC9CD,EAAKE,SAAQ,SAAAC,GACTvB,SAASC,cAAc,WAAWoB,WAAlC,WAAmDE,EAAOxB,YAM1ES,EAAEgB,YAAYnB,GACdL,SAASC,cAAc,eAAeuB,YAAYhB,IAjChC,kCA0CtB,mCACI,0BAASiB,UAAU,+CAAnB,UACI,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,yEAAf,UACI,oBAAIA,UAAU,0EAAd,2BACA,wBAAQA,UAAU,wIAAwIC,QAAS,WAC/JvC,GApDpBC,EAAYuC,OACZ3B,SAASC,cAAc,WAAWoB,UAAY,mBAN9CjC,EAAYwC,QACZ5B,SAASC,cAAc,WAAWoB,UAAY,iBAyD1BlC,GAAaA,GAFjB,iCAMR,oBAAIsC,UAAU,kBACd,qBAAKA,UAAU,8CAAf,+BCtEDI,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,U","file":"static/js/main.96792639.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Home() {\r\n\r\n    // document.querySelector('.micBtn')\r\n    // document.querySelector('.rap-holder')\r\n\r\n    let listening = false\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.onstart = function () {\r\n        console.log(\"We are listening. Try speaking into the microphone.\");\r\n    };\r\n\r\n    const start = () => {\r\n        recognition.start();\r\n        document.querySelector('.micBtn').innerText = 'Stop Rapping?'\r\n    };\r\n\r\n    const stop = () => {\r\n        recognition.stop();\r\n        document.querySelector('.micBtn').innerText = 'Start Rapping!'\r\n    };\r\n\r\n    const onResult = event => {\r\n        document.querySelector('.rap-holder').innerHTML = \"\";\r\n\r\n        // let transcript = event.results[0][0].transcript;\r\n        // console.log(event.results[0][0].confidence);\r\n        let word\r\n\r\n        for (const res of event.results) {\r\n            const text = document.createTextNode(res[0].transcript);\r\n            const p = document.createElement(\"span\");\r\n            const bool = true\r\n            if (res.isFinal) {\r\n                // console.log(res);\r\n                p.classList.add(\"text-white\");\r\n                let n = res[0].transcript.split(\" \");\r\n                if (word !== undefined && word === n[n.length - 1]) {\r\n                    break\r\n                }\r\n                word = n[n.length - 1];\r\n                // console.log(word);\r\n                fetch(`https://rhymebrain.com/talk?function=getRhymes&word=${word}&maxResults=10&lang=en`)\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        // console.log(data);\r\n                        document.querySelector('.rhymes').innerText = \"\"\r\n                        data.forEach(object => {\r\n                            document.querySelector('.rhymes').innerText += ` ${object.word}`\r\n                        });\r\n                        // for (let i = 0; i < 20; i++) {\r\n                        // }\r\n                    })\r\n            }\r\n            p.appendChild(text);\r\n            document.querySelector('.rap-holder').appendChild(p);\r\n        }\r\n    };\r\n\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.addEventListener(\"result\", onResult);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"text-gray-400 bg-gray-900 body-font h-screen\">\r\n                <div className=\"container px-5 py-24 mx-auto\">\r\n                    <div className=\"lg:w-2/3 flex flex-col sm:flex-row sm:items-center items-start mx-auto\">\r\n                        <h1 className=\"rap-holder flex-grow sm:pr-16 text-2xl font-medium title-font text-grey\">Your Rap Here</h1>\r\n                        <button className=\"micBtn flex-shrink-0 text-white bg-yellow-500 border-0 py-2 px-8 focus:outline-none hover:bg-yellow-600 rounded text-lg mt-10 sm:mt-0\" onClick={() => {\r\n                            listening ? stop() : start();\r\n                            listening = !listening;\r\n                        }}>Start Rapping!</button>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"w-2/3 mx-auto\" />\r\n                <div className=\"rhymes container my-20 text-center text-2xl\">Rhymes Here</div>\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from \"./Home\";\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}